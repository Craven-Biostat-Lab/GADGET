--------------------------------------------------------------------------------
-- set up and populate gene table

CREATE TABLE  `gene` (
  `tax_id` int(11) unsigned DEFAULT NULL,
  `entrez_id` int(11) NOT NULL,
  `symbol` varchar(30) DEFAULT NULL,
  `name` varchar(150) DEFAULT NULL,
  `locustag` varchar(100) DEFAULT NULL,
  `synonyms` varchar(250) DEFAULT NULL,
  `dbXrefs` varchar(250) DEFAULT NULL,
  `chromosome` varchar(7) DEFAULT NULL,
  `maplocation` varchar(100) DEFAULT NULL,
  `description` varchar(250) DEFAULT NULL,
  `abstracts` int(11) DEFAULT NULL,
  `homolog_abstracts` int(11) DEFAULT NULL,
  PRIMARY KEY (`entrez_id`),
  KEY `symbol` (`symbol`,`tax_id`) USING BTREE,
  KEY `gene_tax` (`entrez_id`,`tax_id`),
  KEY `tax_gene` (`tax_id`,`entrez_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8

-- files for humans, mice, and yeast
ftp://ftp.ncbi.nih.gov/gene/DATA/GENE_INFO/Mammalia/Homo_sapiens.gene_info.gz
ftp://ftp.ncbi.nih.gov/gene/DATA/GENE_INFO/Mammalia/Mus_musculus.gene_info.gz
ftp://ftp.ncbi.nih.gov/gene/DATA/GENE_INFO/Fungi/Saccharomyces_cerevisiae.gene_info.gz

-- once for each species file
load data local infile '~/Downloads/gene_info/Homo_sapiens.gene_info'
into table `gene`
fields terminated by '\t'
(`tax_id`, `entrez_id`, `symbol`, `locustag`, @synonyms, `dbXrefs`, `chromosome`, `maplocation`, `description`, @type, @authsym, `name`, @status, @other, @date)
set `synonyms` := replace(@synonyms, '|', ', ');

--------------------------------------------------------------------------------
-- set up and populate the gene_abstract table with gene2pubmed

CREATE TABLE  `gene_abstract` (
  `gene` int(11) NOT NULL,
  `abstract` int(11) NOT NULL,
  PRIMARY KEY (`gene`,`abstract`),
  KEY `abstract` (`abstract`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

-- get gene-abstract links from gene2pubmed
ftp://ftp.ncbi.nih.gov/gene/DATA/gene2pubmed.gz

load data local infile '~/Downloads/gene2pubmed'
into table `gene_abstract`
fields terminated by '\t'
ignore 1 lines
(@tax_id, `gene`, `abstract`);

--------------------------------------------------------------------------------
-- get gene-abstract links from SGD

http://downloads.yeastgenome.org/curation/literature/gene_literature.tab
http://downloads.yeastgenome.org/curation/chromosomal_feature/dbxref.tab

-- set up SGD gene-abstract table
CREATE TABLE  `sgd_literature` (
  `abstract` int(11) NOT NULL,
  `sgd_gene_id` char(10) NOT NULL,
  PRIMARY KEY (`abstract`,`sgd_gene_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

load data local infile '~/Downloads/SGD/gene_literature.tab'
into table sgd_literature
fields terminated by '\t'
(`abstract`, @citation, @genename, @feature, @topic, `sgd_gene_id`);

-- get Entrez ID - SGD ID links
CREATE TABLE `sgd_xrefs` (
  `xref_id` int(11) NOT NULL,
  `source` varchar(20) NOT NULL,
  `type` varchar(20) NOT NULL,
  `sgd_gene_id` CHAR(10)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

load data local infile '~/Downloads/SGD/dbxref.tab'
into table `sgd_xrefs`
fields terminated by '\t'
(`xref_id`, `source`, `type`, @name, `sgd_gene_id`, @symbol);

delete from sgd_xrefs
where source != 'NCBI'
or type != 'Gene ID';

ALTER TABLE `new`.`sgd_xrefs` DROP COLUMN `source`,
 DROP COLUMN `type`,
 ADD PRIMARY KEY (`xref_id`, `sgd_gene_id`),
 ADD INDEX `xref_id`(`xref_id`),
 ADD INDEX `sgd_gene_id`(`sgd_gene_id`);
 
insert ignore into gene_abstract
select x.`xref_id` `gene`, l.`abstract`
from `sgd_xrefs` x
inner join `sgd_literature` l
using (sgd_gene_id)
where l.`abstract` != 0;

--------------------------------------------------------------------------------
-- get MGI gene-abstract links

ftp://ftp.informatics.jax.org/pub/reports/MRK_Reference.rpt
ftp://ftp.informatics.jax.org/pub/reports/MGI_EntrezGene.rpt

create table `mgi_entrez_gene` (
  `mgi_marker` varchar(15) not null,
  `entrez_id` int(11) not null,
  primary key (`mgi_marker`, `entrez_id`)
) engine=MyISAM charset=utf8;

load data local infile '~/Downloads/MGI/MGI_EntrezGene.rpt'
into table `mgi_entrez_gene`
fields terminated by '\t'
(mgi_marker, @symbol, @status, @name, @position, @chromosome, @type, @secondary, entrez_id, @synonyms, @biotypes, @featuretypes);

delete from `mgi_entrez_gene` where `entrez_id` = 0;

create table `mgi_reference` (
  `mgi_marker` varchar(15) not null,
  `abstract_pmid` int(11) not null,
  primary key (`mgi_marker`, `abstract_pmid`)
) engine=MyIsam charset=utf8;

insert ignore into `gene_abstract`
select e.`entrez_id` `gene`, r.`abstract_pmid`
from `mgi_reference` r
inner join `mgi_entrez_gene` e
using (`mgi_marker`);

--------------------------------------------------------------------------------
-- get homologene groups

ftp://ftp.ncbi.nih.gov/pub/HomoloGene/current/homologene.data

CREATE TABLE  `new`.`homologene_gene` (
  `homologene_id` int(11) NOT NULL,
  `gene` int(11) NOT NULL,
  PRIMARY KEY (`homologene_id`,`gene`),
  KEY `gene` (`gene`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8

load data local infile '~/Downloads/homologene.data'
into table `homologene_gene`
fields terminated by '\t'
(`homologene_id`, @tax_id, `gene`, @symbol, @gi, @accession);

--------------------------------------------------------------------------------
-- restrict data

-- remove abstracts with more than 1000 genes
create table `toomanygenes`
select `abstract`
from gene_abstract
group by `abstract`
having count(`gene`) > 1000;

delete `gene_abstract`
from `gene_abstract` 
inner join `toomanygenes` using (`abstract`);

-- delete genes with no associated abstracts
create table homologene_gene_abstract
select * from gene_abstract
union
select g.`entrez_id` gene, ga.`abstract`
from `gene` g
inner join `homologene_gene` h1 on h1.`gene` = g.`entrez_id`
inner join `homologene_gene` h2 on h1.`homologene_id` = h2.`homologene_id`
inner join `gene_abstract` ga on h2.`gene` = ga.`gene`;

ALTER TABLE `homologene_gene_abstract` ADD INDEX `gene`(`gene`);

delete `gene`
from `gene`
left join `homologene_gene_abstract`
on `gene`.`entrez_id` = `homologene_gene_abstract`.gene
where `homologene_gene_abstract`.`gene` is null;

--------------------------------------------------------------------------------
-- count abstracts for each gene

update `gene`
set `gene`.`abstracts` = (select count(distinct `abstract`) from `gene_abstract` where `gene_abstract`.`gene` = `gene`.`entrez_id`),
`gene`.`homolog_abstracts` = (select count(distinct `abstract`) from `homologene_gene_abstract` where `homologene_gene_abstract`.`gene` = `gene`.`entrez_id`);

--------------------------------------------------------------------------------
-- fetch abstracts

CREATE TABLE  `abstract` (
  `pubmed_id` int(11) NOT NULL,
  `title` varchar(300) DEFAULT NULL,
  `authors` varchar(300) DEFAULT NULL,
  `abstract` text,
  `year` smallint(6) DEFAULT NULL,
  `month` char(3) DEFAULT NULL,
  `journal` varchar(150) DEFAULT NULL,
  `volume` smallint(6) DEFAULT NULL,
  `issue` smallint(6) DEFAULT NULL,
  `pages` varchar(30) DEFAULT NULL,
  `updated` datetime DEFAULT NULL,
  `indexed` datetime DEFAULT NULL,
  PRIMARY KEY (`pubmed_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

insert ignore into `abstract` (`pubmed_id`)
select `abstract` from `gene_abstract`;



